---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <article class="max-w-3xl mx-auto">
    <header class="mb-8">
      <div class="flex items-center space-x-2 text-sm text-gray-500 mb-4">
        <time datetime={post.data.pubDate.toISOString()}>
          {post.data.pubDate.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        {post.data.tags && (
          <span class="text-blue-600">• {post.data.tags.join(', ')}</span>
        )}
      </div>
      <h1 class="text-4xl font-bold text-gray-900 mb-4">
        {post.data.title}
      </h1>
      <p class="text-xl text-gray-600 leading-relaxed">
        {post.data.description}
      </p>
    </header>

    <div class="prose prose-lg prose-gray max-w-none">
      <Content />
    </div>

    <footer class="mt-12 pt-8 border-t border-gray-200">
      <div class="flex items-center justify-between">
        <a href="/blog" class="text-blue-600 hover:text-blue-800 transition-colors">
          ← Back to Blog
        </a>
        <div class="text-sm text-gray-500">
          <time datetime={post.data.pubDate.toISOString()}>
            Published {post.data.pubDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
        </div>
      </div>
    </footer>
  </article>
</Layout> 